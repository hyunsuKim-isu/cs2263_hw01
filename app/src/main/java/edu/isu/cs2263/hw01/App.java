/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.isu.cs2263.hw01;

import org.apache.commons.cli.*;
import org.apache.commons.cli.Option;
import java.io.*;
import java.io.PrintWriter;
import java.util.Stack;

/**
 * @author Hyunsu Kim
 * @version 1.0
 */
public class App extends Evaluator {
    private static final Option BATCH = new Option("b", "batch", true, "batch file containing expressions to evaluate");
    private static final Option HELP = new Option("h", "help", false, "print usage message");
    private static final Option OUTPUT = new Option("o", "output", true, "output file");

    /**
     * @param options for print usage
     */
    private static void printHelp(Options options){
        HelpFormatter formatter = new HelpFormatter();
        PrintWriter pw = new PrintWriter(System.out);
        formatter.printHelp("eval",options);
        formatter.printUsage(pw, 100,"");
        pw.close();
    }

    public static void main(String[] args) {
        Interfaces.inputNum();

        CommandLineParser parser = new DefaultParser();
        // create Options object
        Options options = new Options();

        // add b option
        options.addOption(BATCH);

        // add h option
        options.addOption(HELP);

        // add o option
        options.addOption(OUTPUT);

        try {
            CommandLine cl =  parser.parse(options, args);

            if(cl.hasOption("b")){
                String option = cl.getOptionValue("b");
                String inputValue = ""; //String variables that are store characters
                try {
                    FileReader fr = new FileReader(option);
                    int i;
                    while((i=fr.read())!= -1){
                        inputValue = inputValue + (char)i;
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }

                Interfaces.inputNumCli(inputValue);

            }else if(cl.hasOption("o")){
                String option = cl.getOptionValue("o");
                String outputValue = "";
                String txtValue = "";

                File f = new File(option);
                if(f.isFile()){
                    System.out.println("File exist");
                    try {
                        FileReader fr = new FileReader(option);
                        int i;
                        while((i=fr.read())!= -1){
                            outputValue = outputValue + (char)i;
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    System.out.println(outputValue);

                }else{
                    System.out.println("File not exist, start to make");
                    try{
                        FileWriter fw = new FileWriter(option, true);
                        BufferedWriter bw = new BufferedWriter(fw);
                        FileReader fr = new FileReader("./test.txt");

                        int i;
                        while((i=fr.read())!= -1){
                            txtValue = txtValue + (char)i;
                        }
                        String[] newVal = txtValue.split(System.lineSeparator());

                        for(int j = 0; j < newVal.length; j++){
                            String valueString = newVal[j].replace("\n", "");
                            String answer = String.valueOf((Evaluator.Evaluator(valueString)));
                            bw.write(valueString);
                            bw.newLine();
                            bw.write(answer);
                            bw.newLine();
                        }
                        bw.flush();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }

            }else{
                printHelp(options);
            }
        }
        catch (ParseException exp) {
            System.out.println("Unexpected exception:" + exp.getMessage());
        }
    }
}
